#!/bin/bash
clear
read -p "Qual o nome do usuario a redefinir: " namer
 if cat /etc/passwd |grep $namer: > /dev/null
 then
 echo " "
 else
 clear
 echo "Usuario $namer não existe"
 exit
 fi
clear
function mudarnome(){

clear
printf "Novo nome para usuario $user: "; read nome
usermod -l $nome $namer 1>/dev/null 2>/dev/null
echo -e "\nUsuario: $namer, Novo nome: $nome."
exit
echo ""
echo -ne "\033[01;36mENTER PARA VOLTAR AO MENU PRINCIPAL..."
read ENTER
vpspack
exit
}
function limite(){
userrc=$(echo $namer |sed 's/@/aa/g' |sed 's/-/k/g' |sed 's/0/a/g' |sed 's/1/b/g' |sed 's/2/c/g' |sed 's/3/d/g' |sed 's/4/e/g' |sed 's/5/f/g' |sed 's/6/g/g' |sed 's/7/h/g' |sed 's/8/i/g' |sed 's/9/j/g')
limpcron=$(cat /etc/crontab |grep -v "#$namer#")
echo "$limpcron" > /etc/crontab
echo "#!/bin/sh
if [ \$(ps -u $namer |grep sshd |wc -l) -gt $2 ]; then ps -u $namer |grep sshd |awk '{print \$namer}' > /tmp/sshpid$namer; sshpid$userrc=\$(cat -n /tmp/sshpid$namer |awk '\$namer > $2 {print \$2}'); kill \$sshpid$userrc; fi
sleep 2.5s
if [ \$(ps -u $namer |grep sshd |wc -l) -gt $2 ]; then ps -u $namer |grep sshd |awk '{print \$namer}' > /tmp/sshpid$namer; sshpid$userrc=\$(cat -n /tmp/sshpid$namer |awk '\$namer > $2 {print \$2}'); kill \$sshpid$userrc; fi
sleep 2.5s
if [ \$(ps -u $namer |grep sshd |wc -l) -gt $2 ]; then ps -u $namer |grep sshd |awk '{print \$namer}' > /tmp/sshpid$namer; sshpid$userrc=\$(cat -n /tmp/sshpid$namer |awk '\$namer > $2 {print \$2}'); kill \$sshpid$userrc; fi
sleep 2.5s
if [ \$(ps -u $namer |grep sshd |wc -l) -gt $2 ]; then ps -u $namer |grep sshd |awk '{print \$namer}' > /tmp/sshpid$namer; sshpid$userrc=\$(cat -n /tmp/sshpid$namer |awk '\$namer > $2 {print \$2}'); kill \$sshpid$userrc; fi
sleep 2.5s
if [ \$(ps -u $namer |grep sshd |wc -l) -gt $2 ]; then ps -u $namer |grep sshd |awk '{print \$namer}' > /tmp/sshpid$namer; sshpid$userrc=\$(cat -n /tmp/sshpid$namer |awk '\$namer > $2 {print \$2}'); kill \$sshpid$userrc; fi
sleep 2.5s
if [ \$(ps -u $namer |grep sshd |wc -l) -gt $2 ]; then ps -u $namer |grep sshd |awk '{print \$namer}' > /tmp/sshpid$namer; sshpid$userrc=\$(cat -n /tmp/sshpid$namer |awk '\$namer > $2 {print \$2}'); kill \$sshpid$userrc; fi
sleep 2.5s
if [ \$(ps -u $namer |grep sshd |wc -l) -gt $2 ]; then ps -u $namer |grep sshd |awk '{print \$namer}' > /tmp/sshpid$namer; sshpid$userrc=\$(cat -n /tmp/sshpid$namer |awk '\$namer > $2 {print \$2}'); kill \$sshpid$userrc; fi
sleep 2.5s
if [ \$(ps -u $namer |grep sshd |wc -l) -gt $2 ]; then ps -u $namer |grep sshd |awk '{print \$namer}' > /tmp/sshpid$namer; sshpid$userrc=\$(cat -n /tmp/sshpid$namer |awk '\$namer > $2 {print \$2}'); kill \$sshpid$userrc; fi
sleep 2.5s
if [ \$(ps -u $namer |grep sshd |wc -l) -gt $2 ]; then ps -u $namer |grep sshd |awk '{print \$namer}' > /tmp/sshpid$namer; sshpid$userrc=\$(cat -n /tmp/sshpid$namer |awk '\$namer > $2 {print \$2}'); kill \$sshpid$userrc; fi
sleep 2.5s
if [ \$(ps -u $namer |grep sshd |wc -l) -gt $2 ]; then ps -u $namer |grep sshd |awk '{print \$namer}' > /tmp/sshpid$namer; sshpid$userrc=\$(cat -n /tmp/sshpid$namer |awk '\$namer > $2 {print \$2}'); kill \$sshpid$userrc; fi
sleep 2.5s
if [ \$(ps -u $namer |grep sshd |wc -l) -gt $2 ]; then ps -u $namer |grep sshd |awk '{print \$namer}' > /tmp/sshpid$namer; sshpid$userrc=\$(cat -n /tmp/sshpid$namer |awk '\$namer > $2 {print \$2}'); kill \$sshpid$userrc; fi
sleep 2.5s
if [ \$(ps -u $namer |grep sshd |wc -l) -gt $2 ]; then ps -u $namer |grep sshd |awk '{print \$namer}' > /tmp/sshpid$namer; sshpid$userrc=\$(cat -n /tmp/sshpid$namer |awk '\$namer > $2 {print \$2}'); kill \$sshpid$userrc; fi
sleep 2.5s
if [ \$(ps -u $namer |grep sshd |wc -l) -gt $2 ]; then ps -u $namer |grep sshd |awk '{print \$namer}' > /tmp/sshpid$namer; sshpid$userrc=\$(cat -n /tmp/sshpid$namer |awk '\$namer > $2 {print \$2}'); kill \$sshpid$userrc; fi
sleep 2.5s
if [ \$(ps -u $namer |grep sshd |wc -l) -gt $2 ]; then ps -u $namer |grep sshd |awk '{print \$namer}' > /tmp/sshpid$namer; sshpid$userrc=\$(cat -n /tmp/sshpid$namer |awk '\$namer > $2 {print \$2}'); kill \$sshpid$userrc; fi
sleep 2.5s
if [ \$(ps -u $namer |grep sshd |wc -l) -gt $2 ]; then ps -u $namer |grep sshd |awk '{print \$namer}' > /tmp/sshpid$namer; sshpid$userrc=\$(cat -n /tmp/sshpid$namer |awk '\$namer > $2 {print \$2}'); kill \$sshpid$userrc; fi
sleep 2.5s
if [ \$(ps -u $namer |grep sshd |wc -l) -gt $2 ]; then ps -u $namer |grep sshd |awk '{print \$namer}' > /tmp/sshpid$namer; sshpid$userrc=\$(cat -n /tmp/sshpid$namer |awk '\$namer > $2 {print \$2}'); kill \$sshpid$userrc; fi
sleep 2.5s
if [ \$(ps -u $namer |grep sshd |wc -l) -gt $2 ]; then ps -u $namer |grep sshd |awk '{print \$namer}' > /tmp/sshpid$namer; sshpid$userrc=\$(cat -n /tmp/sshpid$namer |awk '\$namer > $2 {print \$2}'); kill \$sshpid$userrc; fi
sleep 2.5s
if [ \$(ps -u $namer |grep sshd |wc -l) -gt $2 ]; then ps -u $namer |grep sshd |awk '{print \$namer}' > /tmp/sshpid$namer; sshpid$userrc=\$(cat -n /tmp/sshpid$namer |awk '\$namer > $2 {print \$2}'); kill \$sshpid$userrc; fi
sleep 2.5s
if [ \$(ps -u $namer |grep sshd |wc -l) -gt $2 ]; then ps -u $namer |grep sshd |awk '{print \$namer}' > /tmp/sshpid$namer; sshpid$userrc=\$(cat -n /tmp/sshpid$namer |awk '\$namer > $2 {print \$2}'); kill \$sshpid$userrc; fi
sleep 2.5s
if [ \$(ps -u $namer |grep sshd |wc -l) -gt $2 ]; then ps -u $namer |grep sshd |awk '{print \$namer}' > /tmp/sshpid$namer; sshpid$userrc=\$(cat -n /tmp/sshpid$namer |awk '\$namer > $2 {print \$2}'); kill \$sshpid$userrc; fi
sleep 2.5s
if [ \$(ps -u $namer |grep sshd |wc -l) -gt $2 ]; then ps -u $namer |grep sshd |awk '{print \$namer}' > /tmp/sshpid$namer; sshpid$userrc=\$(cat -n /tmp/sshpid$namer |awk '\$namer > $2 {print \$2}'); kill \$sshpid$userrc; fi
sleep 2.5s
if [ \$(ps -u $namer |grep sshd |wc -l) -gt $2 ]; then ps -u $namer |grep sshd |awk '{print \$namer}' > /tmp/sshpid$namer; sshpid$userrc=\$(cat -n /tmp/sshpid$namer |awk '\$namer > $2 {print \$2}'); kill \$sshpid$userrc; fi
sleep 2.5s
if [ \$(ps -u $namer |grep sshd |wc -l) -gt $2 ]; then ps -u $namer |grep sshd |awk '{print \$namer}' > /tmp/sshpid$namer; sshpid$userrc=\$(cat -n /tmp/sshpid$namer |awk '\$namer > $2 {print \$2}'); kill \$sshpid$userrc; fi
exit
" > /etc/VpsPackdir/limite/$namer.sh
chmod a+x /etc/VpsPackdir/limite/$namer.sh 2>/dev/null
echo "*/1 * * * * root /etc/VpsPackdir/limite/$namer.sh #$namer#" >> /etc/crontab
echo -e "\033[1;37mUsuario: \033[1;31m[\033[1;37m$namer\033[1;31m]\033[1;37m Limite: \033[1;31m[\033[1;37m$2\033[1;31m] \033[1;37m[\033[1;31mLimite Aplicado\033[1;37m]  \033[0m" 
echo "$2" > /etc/VpsPackdir/limite/$namer
}
function logins(){
clear
read -p "Qual o novo limite de logins: " liml
limite $namer $liml
echo ""
echo -ne "\033[01;36mENTER PARA VOLTAR AO MENU PRINCIPAL..."
read ENTER
vpspack
exit
}
function expiracao(){
echo "Qual a nova data : formato AAAA/MM/DD"
read -p ": " date
chage -E $date $namer 2> /dev/null
echo -e "\033[1;31mUsuario $namer Date: $date\033[0m"
echo ""
echo -ne "\033[01;36mENTER PARA VOLTAR AO MENU PRINCIPAL..."
read ENTER
vpspack
exit
}
function nova(){
read -p "Qual a nova senha para $namer: " senha
(echo "$senha" ; echo "$senha" ) |passwd $namer > /dev/null 2>/dev/null
echo "$senha" > /etc/VpsPackdir/senha/$namer
echo "Nova senha aplicada"
echo ""
echo -ne "\033[01;36mENTER PARA VOLTAR AO MENU..."
read ENTER
vpspack
exit
}

clear
if [[ $1 == "" ]]
then
echo -e "\033[1;30m•••••> Script Edited ColtSeals TecnologY (NERD's)\033[0m"
echo -e "\033[0;35m------------------------------------------------------------\033[0m"
echo -e "\033[36;37m PAINEL DE REDEFINIR USUARIO SSH\033[0m"
echo -e "\033[0;35m------------------------------------------------------------\033[0m"
echo -e "\033[01;36m║\033[1;37m0\033[1;36m║•\033[01;37m VOLTAR \033[01;32m(Volta ao Menu VPN)\033[0m"
echo -e "\033[01;36m║\033[1;37m1\033[1;36m║•\033[01;37m MUDAR NOME \033[01;32m(Mudar nome de um usuario)\033[0m"
echo -e "\033[01;36m║\033[1;37m2\033[1;36m║•\033[01;37m ALTERAR LIMITE \033[01;32m(Altera o Limite de um Usuario)\033[0m"
echo -e "\033[01;36m║\033[1;37m3\033[1;36m║•\033[01;37m ALTERAR DATA \033[01;32m(Altera a validade de um Usuario)\033[0m"
echo -e "\033[01;36m║\033[1;37m4\033[1;36m║•\033[01;37m ALTERAR SENHA \033[01;32m(Altera a senha de um Usuario SSH)\033[0m"
echo -e "\033[01;36m║\033[1;37m5\033[1;36m║•\033[01;37m REMOVER LIMITE \033[01;32m(Remover limite de conexoes de um usuario)\033[0m"
echo -e "\033[01;36m║\033[1;37m6\033[1;36m║•\033[01;37m VOLTAR \033[01;32m(Volta ao Menu anterior)\033[0m"
read -p ": " opcao
else
opcao=$1
fi
case $opcao in
  0 | 00 )
   vpspack;;
  1 | 01 )
   mudarnome;;
  2 | 02 )
   expiracao;;
  3 | 03 )
   nova;;
  4 | 04 )
   vpspack;;
  5 | 05 )
   expiracao;;
  6 | 06 )
   nova;;
   esac
